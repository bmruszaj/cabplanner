"""Initial schema with snapshot system

Revision ID: 8fcefcd73ebc
Revises:
Create Date: 2025-10-01 21:15:17.259547

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8fcefcd73ebc"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accessories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("sku", sa.String(length=120), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("sku", name="uq_accessory_sku"),
    )
    with op.batch_alter_table("accessories", schema=None) as batch_op:
        batch_op.create_index("ix_accessories_sku", ["sku"], unique=False)

    op.create_table(
        "cabinet_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("kitchen_type", sa.String(length=60), nullable=False),
        sa.Column("nazwa", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("nazwa", name="uq_cabinettype_nazwa"),
    )
    with op.batch_alter_table("cabinet_types", schema=None) as batch_op:
        batch_op.create_index(
            "ix_cabinet_types_kitchen_type", ["kitchen_type"], unique=False
        )

    op.create_table(
        "drawer_templates",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=120), nullable=False),
        sa.Column("system", sa.String(length=32), nullable=False),
        sa.Column("runner_length_mm", sa.Integer(), nullable=False),
        sa.Column("height_profile", sa.String(length=16), nullable=True),
        sa.Column("params_json", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "(height_profile IS NULL) OR (height_profile IN ('LOW', 'MED', 'HIGH'))",
            name="ck_drawer_template_height_profile",
        ),
        sa.CheckConstraint(
            "system IN ('WOOD_BOX', 'COMFORTBOX')", name="ck_drawer_template_system"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", name="uq_drawer_template_name"),
    )
    with op.batch_alter_table("drawer_templates", schema=None) as batch_op:
        batch_op.create_index(
            "ix_drawer_template_sys_len", ["system", "runner_length_mm"], unique=False
        )

    op.create_table(
        "formula_constants",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(length=120), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("type", sa.String(length=16), nullable=False),
        sa.Column("group", sa.String(length=120), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("key"),
    )
    op.create_table(
        "projects",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("kitchen_type", sa.String(length=60), nullable=False),
        sa.Column("order_number", sa.String(length=120), nullable=False),
        sa.Column("client_name", sa.String(length=255), nullable=True),
        sa.Column("client_address", sa.String(length=255), nullable=True),
        sa.Column("client_phone", sa.String(length=120), nullable=True),
        sa.Column("client_email", sa.String(length=255), nullable=True),
        sa.Column("blaty", sa.Boolean(), nullable=False),
        sa.Column("blaty_note", sa.Text(), nullable=True),
        sa.Column("cokoly", sa.Boolean(), nullable=False),
        sa.Column("cokoly_note", sa.Text(), nullable=True),
        sa.Column("uwagi", sa.Boolean(), nullable=False),
        sa.Column("uwagi_note", sa.Text(), nullable=True),
        sa.Column("flag_notes", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("order_number", name="uq_project_order"),
    )
    op.create_table(
        "settings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(length=120), nullable=False),
        sa.Column("value", sa.String(), nullable=True),
        sa.Column("value_type", sa.String(length=16), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("key"),
    )
    op.create_table(
        "cabinet_parts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("cabinet_type_id", sa.Integer(), nullable=False),
        sa.Column("part_name", sa.String(length=255), nullable=False),
        sa.Column("height_mm", sa.Integer(), nullable=False),
        sa.Column("width_mm", sa.Integer(), nullable=False),
        sa.Column("pieces", sa.Integer(), nullable=False),
        sa.Column("wrapping", sa.String(length=32), nullable=True),
        sa.Column("comments", sa.Text(), nullable=True),
        sa.Column("material", sa.String(length=32), nullable=True),
        sa.Column("thickness_mm", sa.Integer(), nullable=True),
        sa.Column("processing_json", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "height_mm >= 0 AND width_mm >= 0", name="ck_part_dims_nonneg"
        ),
        sa.CheckConstraint("pieces >= 0", name="ck_part_pieces_nonneg"),
        sa.ForeignKeyConstraint(
            ["cabinet_type_id"], ["cabinet_types.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("cabinet_parts", schema=None) as batch_op:
        batch_op.create_index(
            "ix_cabinet_parts_type", ["cabinet_type_id"], unique=False
        )

    op.create_table(
        "cabinet_template_drawers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("cabinet_type_id", sa.Integer(), nullable=False),
        sa.Column("position", sa.Integer(), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.Column("drawer_template_id", sa.Integer(), nullable=True),
        sa.Column("face_mode", sa.String(length=16), nullable=False),
        sa.Column("face_height_mm", sa.Integer(), nullable=True),
        sa.Column("face_ratio", sa.Integer(), nullable=True),
        sa.Column("params_json", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "face_mode IN ('AUTO', 'FIXED', 'RATIO')", name="ck_ct_drawers_face_mode"
        ),
        sa.CheckConstraint("count >= 1", name="ck_template_drawer_count"),
        sa.ForeignKeyConstraint(
            ["cabinet_type_id"], ["cabinet_types.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["drawer_template_id"], ["drawer_templates.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "cabinet_type_id", "position", name="uq_template_drawer_stack"
        ),
    )
    with op.batch_alter_table("cabinet_template_drawers", schema=None) as batch_op:
        batch_op.create_index(
            "ix_ct_drawers_cabinet", ["cabinet_type_id"], unique=False
        )

    op.create_table(
        "drawer_template_accessories",
        sa.Column("drawer_template_id", sa.Integer(), nullable=False),
        sa.Column("accessory_id", sa.Integer(), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["accessory_id"], ["accessories.id"], ondelete="RESTRICT"
        ),
        sa.ForeignKeyConstraint(
            ["drawer_template_id"], ["drawer_templates.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("drawer_template_id", "accessory_id"),
    )
    op.create_table(
        "project_cabinets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("type_id", sa.Integer(), nullable=True),
        sa.Column("sequence_number", sa.Integer(), nullable=False),
        sa.Column("body_color", sa.String(length=120), nullable=False),
        sa.Column("front_color", sa.String(length=120), nullable=False),
        sa.Column("handle_type", sa.String(length=120), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.CheckConstraint("quantity >= 1", name="ck_quantity_pos"),
        sa.ForeignKeyConstraint(["project_id"], ["projects.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["type_id"], ["cabinet_types.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "project_id", "sequence_number", name="uq_project_sequence"
        ),
    )
    with op.batch_alter_table("project_cabinets", schema=None) as batch_op:
        batch_op.create_index(
            "ix_project_cabinets_project", ["project_id"], unique=False
        )
        batch_op.create_index("ix_project_cabinets_type", ["type_id"], unique=False)

    op.create_table(
        "project_cabinet_accessories",
        sa.Column("project_cabinet_id", sa.Integer(), nullable=False),
        sa.Column("accessory_id", sa.Integer(), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["accessory_id"], ["accessories.id"], ondelete="RESTRICT"
        ),
        sa.ForeignKeyConstraint(
            ["project_cabinet_id"], ["project_cabinets.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("project_cabinet_id", "accessory_id"),
    )
    op.create_table(
        "project_cabinet_accessory_snapshots",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("project_cabinet_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("sku", sa.String(length=120), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.Column("source_accessory_id", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.CheckConstraint("count >= 1", name="ck_project_accessory_count_pos"),
        sa.ForeignKeyConstraint(
            ["project_cabinet_id"], ["project_cabinets.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["source_accessory_id"], ["accessories.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table(
        "project_cabinet_accessory_snapshots", schema=None
    ) as batch_op:
        batch_op.create_index(
            "ix_project_cabinet_accessory_snapshots_cabinet",
            ["project_cabinet_id"],
            unique=False,
        )
        batch_op.create_index(
            "ix_project_cabinet_accessory_snapshots_source",
            ["source_accessory_id"],
            unique=False,
        )

    op.create_table(
        "project_cabinet_drawers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("project_cabinet_id", sa.Integer(), nullable=False),
        sa.Column("position", sa.Integer(), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.Column("drawer_template_id", sa.Integer(), nullable=True),
        sa.Column("face_mode", sa.String(length=16), nullable=False),
        sa.Column("face_height_mm", sa.Integer(), nullable=True),
        sa.Column("face_ratio", sa.Integer(), nullable=True),
        sa.Column("params_json", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "face_mode IN ('AUTO', 'FIXED', 'RATIO')",
            name="ck_pcabinet_drawers_face_mode",
        ),
        sa.CheckConstraint("count >= 1", name="ck_pcabinet_drawer_count"),
        sa.ForeignKeyConstraint(
            ["drawer_template_id"], ["drawer_templates.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["project_cabinet_id"], ["project_cabinets.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "project_cabinet_id", "position", name="uq_pcabinet_drawer_stack"
        ),
    )
    with op.batch_alter_table("project_cabinet_drawers", schema=None) as batch_op:
        batch_op.create_index(
            "ix_pcabinet_drawers_pcabinet", ["project_cabinet_id"], unique=False
        )

    op.create_table(
        "project_cabinet_parts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("project_cabinet_id", sa.Integer(), nullable=False),
        sa.Column("part_name", sa.String(length=255), nullable=False),
        sa.Column("height_mm", sa.Integer(), nullable=False),
        sa.Column("width_mm", sa.Integer(), nullable=False),
        sa.Column("pieces", sa.Integer(), nullable=False),
        sa.Column("wrapping", sa.String(length=32), nullable=True),
        sa.Column("comments", sa.Text(), nullable=True),
        sa.Column("material", sa.String(length=32), nullable=True),
        sa.Column("thickness_mm", sa.Integer(), nullable=True),
        sa.Column("processing_json", sa.JSON(), nullable=True),
        sa.Column("source_template_id", sa.Integer(), nullable=True),
        sa.Column("source_part_id", sa.Integer(), nullable=True),
        sa.Column("calc_context_json", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "height_mm >= 0 AND width_mm >= 0", name="ck_project_part_dims_nonneg"
        ),
        sa.CheckConstraint("pieces >= 0", name="ck_project_part_pieces_nonneg"),
        sa.ForeignKeyConstraint(
            ["project_cabinet_id"], ["project_cabinets.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["source_part_id"], ["cabinet_parts.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["source_template_id"], ["cabinet_types.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("project_cabinet_parts", schema=None) as batch_op:
        batch_op.create_index(
            "ix_project_cabinet_parts_cabinet", ["project_cabinet_id"], unique=False
        )
        batch_op.create_index(
            "ix_project_cabinet_parts_source_part", ["source_part_id"], unique=False
        )
        batch_op.create_index(
            "ix_project_cabinet_parts_source_template",
            ["source_template_id"],
            unique=False,
        )

    op.create_table(
        "project_cabinet_drawer_accessories",
        sa.Column("project_cabinet_drawer_id", sa.Integer(), nullable=False),
        sa.Column("accessory_id", sa.Integer(), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["accessory_id"], ["accessories.id"], ondelete="RESTRICT"
        ),
        sa.ForeignKeyConstraint(
            ["project_cabinet_drawer_id"],
            ["project_cabinet_drawers.id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("project_cabinet_drawer_id", "accessory_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("project_cabinet_drawer_accessories")
    with op.batch_alter_table("project_cabinet_parts", schema=None) as batch_op:
        batch_op.drop_index("ix_project_cabinet_parts_source_template")
        batch_op.drop_index("ix_project_cabinet_parts_source_part")
        batch_op.drop_index("ix_project_cabinet_parts_cabinet")

    op.drop_table("project_cabinet_parts")
    with op.batch_alter_table("project_cabinet_drawers", schema=None) as batch_op:
        batch_op.drop_index("ix_pcabinet_drawers_pcabinet")

    op.drop_table("project_cabinet_drawers")
    with op.batch_alter_table(
        "project_cabinet_accessory_snapshots", schema=None
    ) as batch_op:
        batch_op.drop_index("ix_project_cabinet_accessory_snapshots_source")
        batch_op.drop_index("ix_project_cabinet_accessory_snapshots_cabinet")

    op.drop_table("project_cabinet_accessory_snapshots")
    op.drop_table("project_cabinet_accessories")
    with op.batch_alter_table("project_cabinets", schema=None) as batch_op:
        batch_op.drop_index("ix_project_cabinets_type")
        batch_op.drop_index("ix_project_cabinets_project")

    op.drop_table("project_cabinets")
    op.drop_table("drawer_template_accessories")
    with op.batch_alter_table("cabinet_template_drawers", schema=None) as batch_op:
        batch_op.drop_index("ix_ct_drawers_cabinet")

    op.drop_table("cabinet_template_drawers")
    with op.batch_alter_table("cabinet_parts", schema=None) as batch_op:
        batch_op.drop_index("ix_cabinet_parts_type")

    op.drop_table("cabinet_parts")
    op.drop_table("settings")
    op.drop_table("projects")
    op.drop_table("formula_constants")
    with op.batch_alter_table("drawer_templates", schema=None) as batch_op:
        batch_op.drop_index("ix_drawer_template_sys_len")

    op.drop_table("drawer_templates")
    with op.batch_alter_table("cabinet_types", schema=None) as batch_op:
        batch_op.drop_index("ix_cabinet_types_kitchen_type")

    op.drop_table("cabinet_types")
    with op.batch_alter_table("accessories", schema=None) as batch_op:
        batch_op.drop_index("ix_accessories_sku")

    op.drop_table("accessories")
    # ### end Alembic commands ###
